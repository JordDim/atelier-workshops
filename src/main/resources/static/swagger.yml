openapi: 3.0.3
info:
  title: atelier-workshops
  description: |-
    A microservice focused on the organization and maintenance of workshops.
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8088/api/v1
    description: Local server

tags:
  - name: workshops
    description: Controller for workshops.

paths:
  /workshops:
    post:
      tags:
        - workshops
      summary: Create a new workshop
      description: Create a new workshop
      operationId: createWorkshop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkshopRequest'
      responses:
        '201':
          description: Workshop created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkshopResponse'
        '400':
          description: Invalid input
        '409':
          description: Workshop already exists
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - workshops
      summary: Retrieve all workshops
      description: Retrieve all workshops in a list format
      operationId: getWorkshops
      responses:
        '200':
          description: Retrieved workshop list successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkshopResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /workshops/{workshopId}:
    put:
      tags:
        - workshops
      summary: Update a workshop
      description: Update a workshop
      operationId: updateWorkshop
      parameters:
        - name: workshopId
          in: path
          description: id for the workshop that is wanted to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkshopRequest'
      responses:
        '200':
          description: Workshop edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkshopResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - workshops
      summary: Delete a workshop
      description: Delete a workshop
      operationId: deleteWorkshop
      parameters:
        - name: workshopId
          in: path
          description: id for the workshop that is wanted to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Workshop deleted successfully
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    WorkshopRequest:
      type: object
      properties:
        name:
          type: string
          example: user123

    WorkshopResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: user123

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
          description: "Código de estado HTTP que indica el tipo de error."
        message:
          type: string
          example: "Error message"
          description: "Mensaje descriptivo del error que proporciona más detalles."
        details:
          type: string
          example: "Additional error details."
          description: "Información adicional o detalles sobre el error (opcional)."
